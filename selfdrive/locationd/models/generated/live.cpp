#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_238063668449877974) {
   out_238063668449877974[0] = 0;
   out_238063668449877974[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_238063668449877974[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_238063668449877974[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_238063668449877974[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_238063668449877974[5] = -sin(in_vec[1]);
   out_238063668449877974[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_238063668449877974[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_238063668449877974[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_238063668449877974[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_238063668449877974[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_238063668449877974[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_238063668449877974[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_238063668449877974[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_238063668449877974[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_238063668449877974[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_238063668449877974[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_238063668449877974[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5827253177424224507) {
   out_5827253177424224507[0] = delta_x[0] + nom_x[0];
   out_5827253177424224507[1] = delta_x[1] + nom_x[1];
   out_5827253177424224507[2] = delta_x[2] + nom_x[2];
   out_5827253177424224507[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5827253177424224507[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5827253177424224507[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5827253177424224507[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5827253177424224507[7] = delta_x[6] + nom_x[7];
   out_5827253177424224507[8] = delta_x[7] + nom_x[8];
   out_5827253177424224507[9] = delta_x[8] + nom_x[9];
   out_5827253177424224507[10] = delta_x[9] + nom_x[10];
   out_5827253177424224507[11] = delta_x[10] + nom_x[11];
   out_5827253177424224507[12] = delta_x[11] + nom_x[12];
   out_5827253177424224507[13] = delta_x[12] + nom_x[13];
   out_5827253177424224507[14] = delta_x[13] + nom_x[14];
   out_5827253177424224507[15] = delta_x[14] + nom_x[15];
   out_5827253177424224507[16] = delta_x[15] + nom_x[16];
   out_5827253177424224507[17] = delta_x[16] + nom_x[17];
   out_5827253177424224507[18] = delta_x[17] + nom_x[18];
   out_5827253177424224507[19] = delta_x[18] + nom_x[19];
   out_5827253177424224507[20] = delta_x[19] + nom_x[20];
   out_5827253177424224507[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4468494934585064234) {
   out_4468494934585064234[0] = -nom_x[0] + true_x[0];
   out_4468494934585064234[1] = -nom_x[1] + true_x[1];
   out_4468494934585064234[2] = -nom_x[2] + true_x[2];
   out_4468494934585064234[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4468494934585064234[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4468494934585064234[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4468494934585064234[6] = -nom_x[7] + true_x[7];
   out_4468494934585064234[7] = -nom_x[8] + true_x[8];
   out_4468494934585064234[8] = -nom_x[9] + true_x[9];
   out_4468494934585064234[9] = -nom_x[10] + true_x[10];
   out_4468494934585064234[10] = -nom_x[11] + true_x[11];
   out_4468494934585064234[11] = -nom_x[12] + true_x[12];
   out_4468494934585064234[12] = -nom_x[13] + true_x[13];
   out_4468494934585064234[13] = -nom_x[14] + true_x[14];
   out_4468494934585064234[14] = -nom_x[15] + true_x[15];
   out_4468494934585064234[15] = -nom_x[16] + true_x[16];
   out_4468494934585064234[16] = -nom_x[17] + true_x[17];
   out_4468494934585064234[17] = -nom_x[18] + true_x[18];
   out_4468494934585064234[18] = -nom_x[19] + true_x[19];
   out_4468494934585064234[19] = -nom_x[20] + true_x[20];
   out_4468494934585064234[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_69948331551315511) {
   out_69948331551315511[0] = 1.0;
   out_69948331551315511[1] = 0;
   out_69948331551315511[2] = 0;
   out_69948331551315511[3] = 0;
   out_69948331551315511[4] = 0;
   out_69948331551315511[5] = 0;
   out_69948331551315511[6] = 0;
   out_69948331551315511[7] = 0;
   out_69948331551315511[8] = 0;
   out_69948331551315511[9] = 0;
   out_69948331551315511[10] = 0;
   out_69948331551315511[11] = 0;
   out_69948331551315511[12] = 0;
   out_69948331551315511[13] = 0;
   out_69948331551315511[14] = 0;
   out_69948331551315511[15] = 0;
   out_69948331551315511[16] = 0;
   out_69948331551315511[17] = 0;
   out_69948331551315511[18] = 0;
   out_69948331551315511[19] = 0;
   out_69948331551315511[20] = 0;
   out_69948331551315511[21] = 0;
   out_69948331551315511[22] = 1.0;
   out_69948331551315511[23] = 0;
   out_69948331551315511[24] = 0;
   out_69948331551315511[25] = 0;
   out_69948331551315511[26] = 0;
   out_69948331551315511[27] = 0;
   out_69948331551315511[28] = 0;
   out_69948331551315511[29] = 0;
   out_69948331551315511[30] = 0;
   out_69948331551315511[31] = 0;
   out_69948331551315511[32] = 0;
   out_69948331551315511[33] = 0;
   out_69948331551315511[34] = 0;
   out_69948331551315511[35] = 0;
   out_69948331551315511[36] = 0;
   out_69948331551315511[37] = 0;
   out_69948331551315511[38] = 0;
   out_69948331551315511[39] = 0;
   out_69948331551315511[40] = 0;
   out_69948331551315511[41] = 0;
   out_69948331551315511[42] = 0;
   out_69948331551315511[43] = 0;
   out_69948331551315511[44] = 1.0;
   out_69948331551315511[45] = 0;
   out_69948331551315511[46] = 0;
   out_69948331551315511[47] = 0;
   out_69948331551315511[48] = 0;
   out_69948331551315511[49] = 0;
   out_69948331551315511[50] = 0;
   out_69948331551315511[51] = 0;
   out_69948331551315511[52] = 0;
   out_69948331551315511[53] = 0;
   out_69948331551315511[54] = 0;
   out_69948331551315511[55] = 0;
   out_69948331551315511[56] = 0;
   out_69948331551315511[57] = 0;
   out_69948331551315511[58] = 0;
   out_69948331551315511[59] = 0;
   out_69948331551315511[60] = 0;
   out_69948331551315511[61] = 0;
   out_69948331551315511[62] = 0;
   out_69948331551315511[63] = 0;
   out_69948331551315511[64] = 0;
   out_69948331551315511[65] = 0;
   out_69948331551315511[66] = -0.5*state[4];
   out_69948331551315511[67] = -0.5*state[5];
   out_69948331551315511[68] = -0.5*state[6];
   out_69948331551315511[69] = 0;
   out_69948331551315511[70] = 0;
   out_69948331551315511[71] = 0;
   out_69948331551315511[72] = 0;
   out_69948331551315511[73] = 0;
   out_69948331551315511[74] = 0;
   out_69948331551315511[75] = 0;
   out_69948331551315511[76] = 0;
   out_69948331551315511[77] = 0;
   out_69948331551315511[78] = 0;
   out_69948331551315511[79] = 0;
   out_69948331551315511[80] = 0;
   out_69948331551315511[81] = 0;
   out_69948331551315511[82] = 0;
   out_69948331551315511[83] = 0;
   out_69948331551315511[84] = 0;
   out_69948331551315511[85] = 0;
   out_69948331551315511[86] = 0;
   out_69948331551315511[87] = 0.5*state[3];
   out_69948331551315511[88] = 0.5*state[6];
   out_69948331551315511[89] = -0.5*state[5];
   out_69948331551315511[90] = 0;
   out_69948331551315511[91] = 0;
   out_69948331551315511[92] = 0;
   out_69948331551315511[93] = 0;
   out_69948331551315511[94] = 0;
   out_69948331551315511[95] = 0;
   out_69948331551315511[96] = 0;
   out_69948331551315511[97] = 0;
   out_69948331551315511[98] = 0;
   out_69948331551315511[99] = 0;
   out_69948331551315511[100] = 0;
   out_69948331551315511[101] = 0;
   out_69948331551315511[102] = 0;
   out_69948331551315511[103] = 0;
   out_69948331551315511[104] = 0;
   out_69948331551315511[105] = 0;
   out_69948331551315511[106] = 0;
   out_69948331551315511[107] = 0;
   out_69948331551315511[108] = -0.5*state[6];
   out_69948331551315511[109] = 0.5*state[3];
   out_69948331551315511[110] = 0.5*state[4];
   out_69948331551315511[111] = 0;
   out_69948331551315511[112] = 0;
   out_69948331551315511[113] = 0;
   out_69948331551315511[114] = 0;
   out_69948331551315511[115] = 0;
   out_69948331551315511[116] = 0;
   out_69948331551315511[117] = 0;
   out_69948331551315511[118] = 0;
   out_69948331551315511[119] = 0;
   out_69948331551315511[120] = 0;
   out_69948331551315511[121] = 0;
   out_69948331551315511[122] = 0;
   out_69948331551315511[123] = 0;
   out_69948331551315511[124] = 0;
   out_69948331551315511[125] = 0;
   out_69948331551315511[126] = 0;
   out_69948331551315511[127] = 0;
   out_69948331551315511[128] = 0;
   out_69948331551315511[129] = 0.5*state[5];
   out_69948331551315511[130] = -0.5*state[4];
   out_69948331551315511[131] = 0.5*state[3];
   out_69948331551315511[132] = 0;
   out_69948331551315511[133] = 0;
   out_69948331551315511[134] = 0;
   out_69948331551315511[135] = 0;
   out_69948331551315511[136] = 0;
   out_69948331551315511[137] = 0;
   out_69948331551315511[138] = 0;
   out_69948331551315511[139] = 0;
   out_69948331551315511[140] = 0;
   out_69948331551315511[141] = 0;
   out_69948331551315511[142] = 0;
   out_69948331551315511[143] = 0;
   out_69948331551315511[144] = 0;
   out_69948331551315511[145] = 0;
   out_69948331551315511[146] = 0;
   out_69948331551315511[147] = 0;
   out_69948331551315511[148] = 0;
   out_69948331551315511[149] = 0;
   out_69948331551315511[150] = 0;
   out_69948331551315511[151] = 0;
   out_69948331551315511[152] = 0;
   out_69948331551315511[153] = 1.0;
   out_69948331551315511[154] = 0;
   out_69948331551315511[155] = 0;
   out_69948331551315511[156] = 0;
   out_69948331551315511[157] = 0;
   out_69948331551315511[158] = 0;
   out_69948331551315511[159] = 0;
   out_69948331551315511[160] = 0;
   out_69948331551315511[161] = 0;
   out_69948331551315511[162] = 0;
   out_69948331551315511[163] = 0;
   out_69948331551315511[164] = 0;
   out_69948331551315511[165] = 0;
   out_69948331551315511[166] = 0;
   out_69948331551315511[167] = 0;
   out_69948331551315511[168] = 0;
   out_69948331551315511[169] = 0;
   out_69948331551315511[170] = 0;
   out_69948331551315511[171] = 0;
   out_69948331551315511[172] = 0;
   out_69948331551315511[173] = 0;
   out_69948331551315511[174] = 0;
   out_69948331551315511[175] = 1.0;
   out_69948331551315511[176] = 0;
   out_69948331551315511[177] = 0;
   out_69948331551315511[178] = 0;
   out_69948331551315511[179] = 0;
   out_69948331551315511[180] = 0;
   out_69948331551315511[181] = 0;
   out_69948331551315511[182] = 0;
   out_69948331551315511[183] = 0;
   out_69948331551315511[184] = 0;
   out_69948331551315511[185] = 0;
   out_69948331551315511[186] = 0;
   out_69948331551315511[187] = 0;
   out_69948331551315511[188] = 0;
   out_69948331551315511[189] = 0;
   out_69948331551315511[190] = 0;
   out_69948331551315511[191] = 0;
   out_69948331551315511[192] = 0;
   out_69948331551315511[193] = 0;
   out_69948331551315511[194] = 0;
   out_69948331551315511[195] = 0;
   out_69948331551315511[196] = 0;
   out_69948331551315511[197] = 1.0;
   out_69948331551315511[198] = 0;
   out_69948331551315511[199] = 0;
   out_69948331551315511[200] = 0;
   out_69948331551315511[201] = 0;
   out_69948331551315511[202] = 0;
   out_69948331551315511[203] = 0;
   out_69948331551315511[204] = 0;
   out_69948331551315511[205] = 0;
   out_69948331551315511[206] = 0;
   out_69948331551315511[207] = 0;
   out_69948331551315511[208] = 0;
   out_69948331551315511[209] = 0;
   out_69948331551315511[210] = 0;
   out_69948331551315511[211] = 0;
   out_69948331551315511[212] = 0;
   out_69948331551315511[213] = 0;
   out_69948331551315511[214] = 0;
   out_69948331551315511[215] = 0;
   out_69948331551315511[216] = 0;
   out_69948331551315511[217] = 0;
   out_69948331551315511[218] = 0;
   out_69948331551315511[219] = 1.0;
   out_69948331551315511[220] = 0;
   out_69948331551315511[221] = 0;
   out_69948331551315511[222] = 0;
   out_69948331551315511[223] = 0;
   out_69948331551315511[224] = 0;
   out_69948331551315511[225] = 0;
   out_69948331551315511[226] = 0;
   out_69948331551315511[227] = 0;
   out_69948331551315511[228] = 0;
   out_69948331551315511[229] = 0;
   out_69948331551315511[230] = 0;
   out_69948331551315511[231] = 0;
   out_69948331551315511[232] = 0;
   out_69948331551315511[233] = 0;
   out_69948331551315511[234] = 0;
   out_69948331551315511[235] = 0;
   out_69948331551315511[236] = 0;
   out_69948331551315511[237] = 0;
   out_69948331551315511[238] = 0;
   out_69948331551315511[239] = 0;
   out_69948331551315511[240] = 0;
   out_69948331551315511[241] = 1.0;
   out_69948331551315511[242] = 0;
   out_69948331551315511[243] = 0;
   out_69948331551315511[244] = 0;
   out_69948331551315511[245] = 0;
   out_69948331551315511[246] = 0;
   out_69948331551315511[247] = 0;
   out_69948331551315511[248] = 0;
   out_69948331551315511[249] = 0;
   out_69948331551315511[250] = 0;
   out_69948331551315511[251] = 0;
   out_69948331551315511[252] = 0;
   out_69948331551315511[253] = 0;
   out_69948331551315511[254] = 0;
   out_69948331551315511[255] = 0;
   out_69948331551315511[256] = 0;
   out_69948331551315511[257] = 0;
   out_69948331551315511[258] = 0;
   out_69948331551315511[259] = 0;
   out_69948331551315511[260] = 0;
   out_69948331551315511[261] = 0;
   out_69948331551315511[262] = 0;
   out_69948331551315511[263] = 1.0;
   out_69948331551315511[264] = 0;
   out_69948331551315511[265] = 0;
   out_69948331551315511[266] = 0;
   out_69948331551315511[267] = 0;
   out_69948331551315511[268] = 0;
   out_69948331551315511[269] = 0;
   out_69948331551315511[270] = 0;
   out_69948331551315511[271] = 0;
   out_69948331551315511[272] = 0;
   out_69948331551315511[273] = 0;
   out_69948331551315511[274] = 0;
   out_69948331551315511[275] = 0;
   out_69948331551315511[276] = 0;
   out_69948331551315511[277] = 0;
   out_69948331551315511[278] = 0;
   out_69948331551315511[279] = 0;
   out_69948331551315511[280] = 0;
   out_69948331551315511[281] = 0;
   out_69948331551315511[282] = 0;
   out_69948331551315511[283] = 0;
   out_69948331551315511[284] = 0;
   out_69948331551315511[285] = 1.0;
   out_69948331551315511[286] = 0;
   out_69948331551315511[287] = 0;
   out_69948331551315511[288] = 0;
   out_69948331551315511[289] = 0;
   out_69948331551315511[290] = 0;
   out_69948331551315511[291] = 0;
   out_69948331551315511[292] = 0;
   out_69948331551315511[293] = 0;
   out_69948331551315511[294] = 0;
   out_69948331551315511[295] = 0;
   out_69948331551315511[296] = 0;
   out_69948331551315511[297] = 0;
   out_69948331551315511[298] = 0;
   out_69948331551315511[299] = 0;
   out_69948331551315511[300] = 0;
   out_69948331551315511[301] = 0;
   out_69948331551315511[302] = 0;
   out_69948331551315511[303] = 0;
   out_69948331551315511[304] = 0;
   out_69948331551315511[305] = 0;
   out_69948331551315511[306] = 0;
   out_69948331551315511[307] = 1.0;
   out_69948331551315511[308] = 0;
   out_69948331551315511[309] = 0;
   out_69948331551315511[310] = 0;
   out_69948331551315511[311] = 0;
   out_69948331551315511[312] = 0;
   out_69948331551315511[313] = 0;
   out_69948331551315511[314] = 0;
   out_69948331551315511[315] = 0;
   out_69948331551315511[316] = 0;
   out_69948331551315511[317] = 0;
   out_69948331551315511[318] = 0;
   out_69948331551315511[319] = 0;
   out_69948331551315511[320] = 0;
   out_69948331551315511[321] = 0;
   out_69948331551315511[322] = 0;
   out_69948331551315511[323] = 0;
   out_69948331551315511[324] = 0;
   out_69948331551315511[325] = 0;
   out_69948331551315511[326] = 0;
   out_69948331551315511[327] = 0;
   out_69948331551315511[328] = 0;
   out_69948331551315511[329] = 1.0;
   out_69948331551315511[330] = 0;
   out_69948331551315511[331] = 0;
   out_69948331551315511[332] = 0;
   out_69948331551315511[333] = 0;
   out_69948331551315511[334] = 0;
   out_69948331551315511[335] = 0;
   out_69948331551315511[336] = 0;
   out_69948331551315511[337] = 0;
   out_69948331551315511[338] = 0;
   out_69948331551315511[339] = 0;
   out_69948331551315511[340] = 0;
   out_69948331551315511[341] = 0;
   out_69948331551315511[342] = 0;
   out_69948331551315511[343] = 0;
   out_69948331551315511[344] = 0;
   out_69948331551315511[345] = 0;
   out_69948331551315511[346] = 0;
   out_69948331551315511[347] = 0;
   out_69948331551315511[348] = 0;
   out_69948331551315511[349] = 0;
   out_69948331551315511[350] = 0;
   out_69948331551315511[351] = 1.0;
   out_69948331551315511[352] = 0;
   out_69948331551315511[353] = 0;
   out_69948331551315511[354] = 0;
   out_69948331551315511[355] = 0;
   out_69948331551315511[356] = 0;
   out_69948331551315511[357] = 0;
   out_69948331551315511[358] = 0;
   out_69948331551315511[359] = 0;
   out_69948331551315511[360] = 0;
   out_69948331551315511[361] = 0;
   out_69948331551315511[362] = 0;
   out_69948331551315511[363] = 0;
   out_69948331551315511[364] = 0;
   out_69948331551315511[365] = 0;
   out_69948331551315511[366] = 0;
   out_69948331551315511[367] = 0;
   out_69948331551315511[368] = 0;
   out_69948331551315511[369] = 0;
   out_69948331551315511[370] = 0;
   out_69948331551315511[371] = 0;
   out_69948331551315511[372] = 0;
   out_69948331551315511[373] = 1.0;
   out_69948331551315511[374] = 0;
   out_69948331551315511[375] = 0;
   out_69948331551315511[376] = 0;
   out_69948331551315511[377] = 0;
   out_69948331551315511[378] = 0;
   out_69948331551315511[379] = 0;
   out_69948331551315511[380] = 0;
   out_69948331551315511[381] = 0;
   out_69948331551315511[382] = 0;
   out_69948331551315511[383] = 0;
   out_69948331551315511[384] = 0;
   out_69948331551315511[385] = 0;
   out_69948331551315511[386] = 0;
   out_69948331551315511[387] = 0;
   out_69948331551315511[388] = 0;
   out_69948331551315511[389] = 0;
   out_69948331551315511[390] = 0;
   out_69948331551315511[391] = 0;
   out_69948331551315511[392] = 0;
   out_69948331551315511[393] = 0;
   out_69948331551315511[394] = 0;
   out_69948331551315511[395] = 1.0;
   out_69948331551315511[396] = 0;
   out_69948331551315511[397] = 0;
   out_69948331551315511[398] = 0;
   out_69948331551315511[399] = 0;
   out_69948331551315511[400] = 0;
   out_69948331551315511[401] = 0;
   out_69948331551315511[402] = 0;
   out_69948331551315511[403] = 0;
   out_69948331551315511[404] = 0;
   out_69948331551315511[405] = 0;
   out_69948331551315511[406] = 0;
   out_69948331551315511[407] = 0;
   out_69948331551315511[408] = 0;
   out_69948331551315511[409] = 0;
   out_69948331551315511[410] = 0;
   out_69948331551315511[411] = 0;
   out_69948331551315511[412] = 0;
   out_69948331551315511[413] = 0;
   out_69948331551315511[414] = 0;
   out_69948331551315511[415] = 0;
   out_69948331551315511[416] = 0;
   out_69948331551315511[417] = 1.0;
   out_69948331551315511[418] = 0;
   out_69948331551315511[419] = 0;
   out_69948331551315511[420] = 0;
   out_69948331551315511[421] = 0;
   out_69948331551315511[422] = 0;
   out_69948331551315511[423] = 0;
   out_69948331551315511[424] = 0;
   out_69948331551315511[425] = 0;
   out_69948331551315511[426] = 0;
   out_69948331551315511[427] = 0;
   out_69948331551315511[428] = 0;
   out_69948331551315511[429] = 0;
   out_69948331551315511[430] = 0;
   out_69948331551315511[431] = 0;
   out_69948331551315511[432] = 0;
   out_69948331551315511[433] = 0;
   out_69948331551315511[434] = 0;
   out_69948331551315511[435] = 0;
   out_69948331551315511[436] = 0;
   out_69948331551315511[437] = 0;
   out_69948331551315511[438] = 0;
   out_69948331551315511[439] = 1.0;
   out_69948331551315511[440] = 0;
   out_69948331551315511[441] = 0;
   out_69948331551315511[442] = 0;
   out_69948331551315511[443] = 0;
   out_69948331551315511[444] = 0;
   out_69948331551315511[445] = 0;
   out_69948331551315511[446] = 0;
   out_69948331551315511[447] = 0;
   out_69948331551315511[448] = 0;
   out_69948331551315511[449] = 0;
   out_69948331551315511[450] = 0;
   out_69948331551315511[451] = 0;
   out_69948331551315511[452] = 0;
   out_69948331551315511[453] = 0;
   out_69948331551315511[454] = 0;
   out_69948331551315511[455] = 0;
   out_69948331551315511[456] = 0;
   out_69948331551315511[457] = 0;
   out_69948331551315511[458] = 0;
   out_69948331551315511[459] = 0;
   out_69948331551315511[460] = 0;
   out_69948331551315511[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3835765045679366635) {
   out_3835765045679366635[0] = dt*state[7] + state[0];
   out_3835765045679366635[1] = dt*state[8] + state[1];
   out_3835765045679366635[2] = dt*state[9] + state[2];
   out_3835765045679366635[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3835765045679366635[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3835765045679366635[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3835765045679366635[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3835765045679366635[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3835765045679366635[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3835765045679366635[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3835765045679366635[10] = state[10];
   out_3835765045679366635[11] = state[11];
   out_3835765045679366635[12] = state[12];
   out_3835765045679366635[13] = state[13];
   out_3835765045679366635[14] = state[14];
   out_3835765045679366635[15] = state[15];
   out_3835765045679366635[16] = state[16];
   out_3835765045679366635[17] = state[17];
   out_3835765045679366635[18] = state[18];
   out_3835765045679366635[19] = state[19];
   out_3835765045679366635[20] = state[20];
   out_3835765045679366635[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5863509772455118343) {
   out_5863509772455118343[0] = 1;
   out_5863509772455118343[1] = 0;
   out_5863509772455118343[2] = 0;
   out_5863509772455118343[3] = 0;
   out_5863509772455118343[4] = 0;
   out_5863509772455118343[5] = 0;
   out_5863509772455118343[6] = dt;
   out_5863509772455118343[7] = 0;
   out_5863509772455118343[8] = 0;
   out_5863509772455118343[9] = 0;
   out_5863509772455118343[10] = 0;
   out_5863509772455118343[11] = 0;
   out_5863509772455118343[12] = 0;
   out_5863509772455118343[13] = 0;
   out_5863509772455118343[14] = 0;
   out_5863509772455118343[15] = 0;
   out_5863509772455118343[16] = 0;
   out_5863509772455118343[17] = 0;
   out_5863509772455118343[18] = 0;
   out_5863509772455118343[19] = 0;
   out_5863509772455118343[20] = 0;
   out_5863509772455118343[21] = 0;
   out_5863509772455118343[22] = 1;
   out_5863509772455118343[23] = 0;
   out_5863509772455118343[24] = 0;
   out_5863509772455118343[25] = 0;
   out_5863509772455118343[26] = 0;
   out_5863509772455118343[27] = 0;
   out_5863509772455118343[28] = dt;
   out_5863509772455118343[29] = 0;
   out_5863509772455118343[30] = 0;
   out_5863509772455118343[31] = 0;
   out_5863509772455118343[32] = 0;
   out_5863509772455118343[33] = 0;
   out_5863509772455118343[34] = 0;
   out_5863509772455118343[35] = 0;
   out_5863509772455118343[36] = 0;
   out_5863509772455118343[37] = 0;
   out_5863509772455118343[38] = 0;
   out_5863509772455118343[39] = 0;
   out_5863509772455118343[40] = 0;
   out_5863509772455118343[41] = 0;
   out_5863509772455118343[42] = 0;
   out_5863509772455118343[43] = 0;
   out_5863509772455118343[44] = 1;
   out_5863509772455118343[45] = 0;
   out_5863509772455118343[46] = 0;
   out_5863509772455118343[47] = 0;
   out_5863509772455118343[48] = 0;
   out_5863509772455118343[49] = 0;
   out_5863509772455118343[50] = dt;
   out_5863509772455118343[51] = 0;
   out_5863509772455118343[52] = 0;
   out_5863509772455118343[53] = 0;
   out_5863509772455118343[54] = 0;
   out_5863509772455118343[55] = 0;
   out_5863509772455118343[56] = 0;
   out_5863509772455118343[57] = 0;
   out_5863509772455118343[58] = 0;
   out_5863509772455118343[59] = 0;
   out_5863509772455118343[60] = 0;
   out_5863509772455118343[61] = 0;
   out_5863509772455118343[62] = 0;
   out_5863509772455118343[63] = 0;
   out_5863509772455118343[64] = 0;
   out_5863509772455118343[65] = 0;
   out_5863509772455118343[66] = 1;
   out_5863509772455118343[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5863509772455118343[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5863509772455118343[69] = 0;
   out_5863509772455118343[70] = 0;
   out_5863509772455118343[71] = 0;
   out_5863509772455118343[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5863509772455118343[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5863509772455118343[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5863509772455118343[75] = 0;
   out_5863509772455118343[76] = 0;
   out_5863509772455118343[77] = 0;
   out_5863509772455118343[78] = 0;
   out_5863509772455118343[79] = 0;
   out_5863509772455118343[80] = 0;
   out_5863509772455118343[81] = 0;
   out_5863509772455118343[82] = 0;
   out_5863509772455118343[83] = 0;
   out_5863509772455118343[84] = 0;
   out_5863509772455118343[85] = 0;
   out_5863509772455118343[86] = 0;
   out_5863509772455118343[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5863509772455118343[88] = 1;
   out_5863509772455118343[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5863509772455118343[90] = 0;
   out_5863509772455118343[91] = 0;
   out_5863509772455118343[92] = 0;
   out_5863509772455118343[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5863509772455118343[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5863509772455118343[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5863509772455118343[96] = 0;
   out_5863509772455118343[97] = 0;
   out_5863509772455118343[98] = 0;
   out_5863509772455118343[99] = 0;
   out_5863509772455118343[100] = 0;
   out_5863509772455118343[101] = 0;
   out_5863509772455118343[102] = 0;
   out_5863509772455118343[103] = 0;
   out_5863509772455118343[104] = 0;
   out_5863509772455118343[105] = 0;
   out_5863509772455118343[106] = 0;
   out_5863509772455118343[107] = 0;
   out_5863509772455118343[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5863509772455118343[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5863509772455118343[110] = 1;
   out_5863509772455118343[111] = 0;
   out_5863509772455118343[112] = 0;
   out_5863509772455118343[113] = 0;
   out_5863509772455118343[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5863509772455118343[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5863509772455118343[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5863509772455118343[117] = 0;
   out_5863509772455118343[118] = 0;
   out_5863509772455118343[119] = 0;
   out_5863509772455118343[120] = 0;
   out_5863509772455118343[121] = 0;
   out_5863509772455118343[122] = 0;
   out_5863509772455118343[123] = 0;
   out_5863509772455118343[124] = 0;
   out_5863509772455118343[125] = 0;
   out_5863509772455118343[126] = 0;
   out_5863509772455118343[127] = 0;
   out_5863509772455118343[128] = 0;
   out_5863509772455118343[129] = 0;
   out_5863509772455118343[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5863509772455118343[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5863509772455118343[132] = 1;
   out_5863509772455118343[133] = 0;
   out_5863509772455118343[134] = 0;
   out_5863509772455118343[135] = 0;
   out_5863509772455118343[136] = 0;
   out_5863509772455118343[137] = 0;
   out_5863509772455118343[138] = 0;
   out_5863509772455118343[139] = 0;
   out_5863509772455118343[140] = 0;
   out_5863509772455118343[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5863509772455118343[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5863509772455118343[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5863509772455118343[144] = 0;
   out_5863509772455118343[145] = 0;
   out_5863509772455118343[146] = 0;
   out_5863509772455118343[147] = 0;
   out_5863509772455118343[148] = 0;
   out_5863509772455118343[149] = 0;
   out_5863509772455118343[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5863509772455118343[151] = 0;
   out_5863509772455118343[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5863509772455118343[153] = 0;
   out_5863509772455118343[154] = 1;
   out_5863509772455118343[155] = 0;
   out_5863509772455118343[156] = 0;
   out_5863509772455118343[157] = 0;
   out_5863509772455118343[158] = 0;
   out_5863509772455118343[159] = 0;
   out_5863509772455118343[160] = 0;
   out_5863509772455118343[161] = 0;
   out_5863509772455118343[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5863509772455118343[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5863509772455118343[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5863509772455118343[165] = 0;
   out_5863509772455118343[166] = 0;
   out_5863509772455118343[167] = 0;
   out_5863509772455118343[168] = 0;
   out_5863509772455118343[169] = 0;
   out_5863509772455118343[170] = 0;
   out_5863509772455118343[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5863509772455118343[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5863509772455118343[173] = 0;
   out_5863509772455118343[174] = 0;
   out_5863509772455118343[175] = 0;
   out_5863509772455118343[176] = 1;
   out_5863509772455118343[177] = 0;
   out_5863509772455118343[178] = 0;
   out_5863509772455118343[179] = 0;
   out_5863509772455118343[180] = 0;
   out_5863509772455118343[181] = 0;
   out_5863509772455118343[182] = 0;
   out_5863509772455118343[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5863509772455118343[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5863509772455118343[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5863509772455118343[186] = 0;
   out_5863509772455118343[187] = 0;
   out_5863509772455118343[188] = 0;
   out_5863509772455118343[189] = 0;
   out_5863509772455118343[190] = 0;
   out_5863509772455118343[191] = 0;
   out_5863509772455118343[192] = 0;
   out_5863509772455118343[193] = 0;
   out_5863509772455118343[194] = 0;
   out_5863509772455118343[195] = 0;
   out_5863509772455118343[196] = 0;
   out_5863509772455118343[197] = 0;
   out_5863509772455118343[198] = 1;
   out_5863509772455118343[199] = 0;
   out_5863509772455118343[200] = 0;
   out_5863509772455118343[201] = 0;
   out_5863509772455118343[202] = 0;
   out_5863509772455118343[203] = 0;
   out_5863509772455118343[204] = 0;
   out_5863509772455118343[205] = 0;
   out_5863509772455118343[206] = 0;
   out_5863509772455118343[207] = 0;
   out_5863509772455118343[208] = 0;
   out_5863509772455118343[209] = 0;
   out_5863509772455118343[210] = 0;
   out_5863509772455118343[211] = 0;
   out_5863509772455118343[212] = 0;
   out_5863509772455118343[213] = 0;
   out_5863509772455118343[214] = 0;
   out_5863509772455118343[215] = 0;
   out_5863509772455118343[216] = 0;
   out_5863509772455118343[217] = 0;
   out_5863509772455118343[218] = 0;
   out_5863509772455118343[219] = 0;
   out_5863509772455118343[220] = 1;
   out_5863509772455118343[221] = 0;
   out_5863509772455118343[222] = 0;
   out_5863509772455118343[223] = 0;
   out_5863509772455118343[224] = 0;
   out_5863509772455118343[225] = 0;
   out_5863509772455118343[226] = 0;
   out_5863509772455118343[227] = 0;
   out_5863509772455118343[228] = 0;
   out_5863509772455118343[229] = 0;
   out_5863509772455118343[230] = 0;
   out_5863509772455118343[231] = 0;
   out_5863509772455118343[232] = 0;
   out_5863509772455118343[233] = 0;
   out_5863509772455118343[234] = 0;
   out_5863509772455118343[235] = 0;
   out_5863509772455118343[236] = 0;
   out_5863509772455118343[237] = 0;
   out_5863509772455118343[238] = 0;
   out_5863509772455118343[239] = 0;
   out_5863509772455118343[240] = 0;
   out_5863509772455118343[241] = 0;
   out_5863509772455118343[242] = 1;
   out_5863509772455118343[243] = 0;
   out_5863509772455118343[244] = 0;
   out_5863509772455118343[245] = 0;
   out_5863509772455118343[246] = 0;
   out_5863509772455118343[247] = 0;
   out_5863509772455118343[248] = 0;
   out_5863509772455118343[249] = 0;
   out_5863509772455118343[250] = 0;
   out_5863509772455118343[251] = 0;
   out_5863509772455118343[252] = 0;
   out_5863509772455118343[253] = 0;
   out_5863509772455118343[254] = 0;
   out_5863509772455118343[255] = 0;
   out_5863509772455118343[256] = 0;
   out_5863509772455118343[257] = 0;
   out_5863509772455118343[258] = 0;
   out_5863509772455118343[259] = 0;
   out_5863509772455118343[260] = 0;
   out_5863509772455118343[261] = 0;
   out_5863509772455118343[262] = 0;
   out_5863509772455118343[263] = 0;
   out_5863509772455118343[264] = 1;
   out_5863509772455118343[265] = 0;
   out_5863509772455118343[266] = 0;
   out_5863509772455118343[267] = 0;
   out_5863509772455118343[268] = 0;
   out_5863509772455118343[269] = 0;
   out_5863509772455118343[270] = 0;
   out_5863509772455118343[271] = 0;
   out_5863509772455118343[272] = 0;
   out_5863509772455118343[273] = 0;
   out_5863509772455118343[274] = 0;
   out_5863509772455118343[275] = 0;
   out_5863509772455118343[276] = 0;
   out_5863509772455118343[277] = 0;
   out_5863509772455118343[278] = 0;
   out_5863509772455118343[279] = 0;
   out_5863509772455118343[280] = 0;
   out_5863509772455118343[281] = 0;
   out_5863509772455118343[282] = 0;
   out_5863509772455118343[283] = 0;
   out_5863509772455118343[284] = 0;
   out_5863509772455118343[285] = 0;
   out_5863509772455118343[286] = 1;
   out_5863509772455118343[287] = 0;
   out_5863509772455118343[288] = 0;
   out_5863509772455118343[289] = 0;
   out_5863509772455118343[290] = 0;
   out_5863509772455118343[291] = 0;
   out_5863509772455118343[292] = 0;
   out_5863509772455118343[293] = 0;
   out_5863509772455118343[294] = 0;
   out_5863509772455118343[295] = 0;
   out_5863509772455118343[296] = 0;
   out_5863509772455118343[297] = 0;
   out_5863509772455118343[298] = 0;
   out_5863509772455118343[299] = 0;
   out_5863509772455118343[300] = 0;
   out_5863509772455118343[301] = 0;
   out_5863509772455118343[302] = 0;
   out_5863509772455118343[303] = 0;
   out_5863509772455118343[304] = 0;
   out_5863509772455118343[305] = 0;
   out_5863509772455118343[306] = 0;
   out_5863509772455118343[307] = 0;
   out_5863509772455118343[308] = 1;
   out_5863509772455118343[309] = 0;
   out_5863509772455118343[310] = 0;
   out_5863509772455118343[311] = 0;
   out_5863509772455118343[312] = 0;
   out_5863509772455118343[313] = 0;
   out_5863509772455118343[314] = 0;
   out_5863509772455118343[315] = 0;
   out_5863509772455118343[316] = 0;
   out_5863509772455118343[317] = 0;
   out_5863509772455118343[318] = 0;
   out_5863509772455118343[319] = 0;
   out_5863509772455118343[320] = 0;
   out_5863509772455118343[321] = 0;
   out_5863509772455118343[322] = 0;
   out_5863509772455118343[323] = 0;
   out_5863509772455118343[324] = 0;
   out_5863509772455118343[325] = 0;
   out_5863509772455118343[326] = 0;
   out_5863509772455118343[327] = 0;
   out_5863509772455118343[328] = 0;
   out_5863509772455118343[329] = 0;
   out_5863509772455118343[330] = 1;
   out_5863509772455118343[331] = 0;
   out_5863509772455118343[332] = 0;
   out_5863509772455118343[333] = 0;
   out_5863509772455118343[334] = 0;
   out_5863509772455118343[335] = 0;
   out_5863509772455118343[336] = 0;
   out_5863509772455118343[337] = 0;
   out_5863509772455118343[338] = 0;
   out_5863509772455118343[339] = 0;
   out_5863509772455118343[340] = 0;
   out_5863509772455118343[341] = 0;
   out_5863509772455118343[342] = 0;
   out_5863509772455118343[343] = 0;
   out_5863509772455118343[344] = 0;
   out_5863509772455118343[345] = 0;
   out_5863509772455118343[346] = 0;
   out_5863509772455118343[347] = 0;
   out_5863509772455118343[348] = 0;
   out_5863509772455118343[349] = 0;
   out_5863509772455118343[350] = 0;
   out_5863509772455118343[351] = 0;
   out_5863509772455118343[352] = 1;
   out_5863509772455118343[353] = 0;
   out_5863509772455118343[354] = 0;
   out_5863509772455118343[355] = 0;
   out_5863509772455118343[356] = 0;
   out_5863509772455118343[357] = 0;
   out_5863509772455118343[358] = 0;
   out_5863509772455118343[359] = 0;
   out_5863509772455118343[360] = 0;
   out_5863509772455118343[361] = 0;
   out_5863509772455118343[362] = 0;
   out_5863509772455118343[363] = 0;
   out_5863509772455118343[364] = 0;
   out_5863509772455118343[365] = 0;
   out_5863509772455118343[366] = 0;
   out_5863509772455118343[367] = 0;
   out_5863509772455118343[368] = 0;
   out_5863509772455118343[369] = 0;
   out_5863509772455118343[370] = 0;
   out_5863509772455118343[371] = 0;
   out_5863509772455118343[372] = 0;
   out_5863509772455118343[373] = 0;
   out_5863509772455118343[374] = 1;
   out_5863509772455118343[375] = 0;
   out_5863509772455118343[376] = 0;
   out_5863509772455118343[377] = 0;
   out_5863509772455118343[378] = 0;
   out_5863509772455118343[379] = 0;
   out_5863509772455118343[380] = 0;
   out_5863509772455118343[381] = 0;
   out_5863509772455118343[382] = 0;
   out_5863509772455118343[383] = 0;
   out_5863509772455118343[384] = 0;
   out_5863509772455118343[385] = 0;
   out_5863509772455118343[386] = 0;
   out_5863509772455118343[387] = 0;
   out_5863509772455118343[388] = 0;
   out_5863509772455118343[389] = 0;
   out_5863509772455118343[390] = 0;
   out_5863509772455118343[391] = 0;
   out_5863509772455118343[392] = 0;
   out_5863509772455118343[393] = 0;
   out_5863509772455118343[394] = 0;
   out_5863509772455118343[395] = 0;
   out_5863509772455118343[396] = 1;
   out_5863509772455118343[397] = 0;
   out_5863509772455118343[398] = 0;
   out_5863509772455118343[399] = 0;
   out_5863509772455118343[400] = 0;
   out_5863509772455118343[401] = 0;
   out_5863509772455118343[402] = 0;
   out_5863509772455118343[403] = 0;
   out_5863509772455118343[404] = 0;
   out_5863509772455118343[405] = 0;
   out_5863509772455118343[406] = 0;
   out_5863509772455118343[407] = 0;
   out_5863509772455118343[408] = 0;
   out_5863509772455118343[409] = 0;
   out_5863509772455118343[410] = 0;
   out_5863509772455118343[411] = 0;
   out_5863509772455118343[412] = 0;
   out_5863509772455118343[413] = 0;
   out_5863509772455118343[414] = 0;
   out_5863509772455118343[415] = 0;
   out_5863509772455118343[416] = 0;
   out_5863509772455118343[417] = 0;
   out_5863509772455118343[418] = 1;
   out_5863509772455118343[419] = 0;
   out_5863509772455118343[420] = 0;
   out_5863509772455118343[421] = 0;
   out_5863509772455118343[422] = 0;
   out_5863509772455118343[423] = 0;
   out_5863509772455118343[424] = 0;
   out_5863509772455118343[425] = 0;
   out_5863509772455118343[426] = 0;
   out_5863509772455118343[427] = 0;
   out_5863509772455118343[428] = 0;
   out_5863509772455118343[429] = 0;
   out_5863509772455118343[430] = 0;
   out_5863509772455118343[431] = 0;
   out_5863509772455118343[432] = 0;
   out_5863509772455118343[433] = 0;
   out_5863509772455118343[434] = 0;
   out_5863509772455118343[435] = 0;
   out_5863509772455118343[436] = 0;
   out_5863509772455118343[437] = 0;
   out_5863509772455118343[438] = 0;
   out_5863509772455118343[439] = 0;
   out_5863509772455118343[440] = 1;
}
void h_4(double *state, double *unused, double *out_8620507365813022760) {
   out_8620507365813022760[0] = state[10] + state[13];
   out_8620507365813022760[1] = state[11] + state[14];
   out_8620507365813022760[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3517578525092137607) {
   out_3517578525092137607[0] = 0;
   out_3517578525092137607[1] = 0;
   out_3517578525092137607[2] = 0;
   out_3517578525092137607[3] = 0;
   out_3517578525092137607[4] = 0;
   out_3517578525092137607[5] = 0;
   out_3517578525092137607[6] = 0;
   out_3517578525092137607[7] = 0;
   out_3517578525092137607[8] = 0;
   out_3517578525092137607[9] = 0;
   out_3517578525092137607[10] = 1;
   out_3517578525092137607[11] = 0;
   out_3517578525092137607[12] = 0;
   out_3517578525092137607[13] = 1;
   out_3517578525092137607[14] = 0;
   out_3517578525092137607[15] = 0;
   out_3517578525092137607[16] = 0;
   out_3517578525092137607[17] = 0;
   out_3517578525092137607[18] = 0;
   out_3517578525092137607[19] = 0;
   out_3517578525092137607[20] = 0;
   out_3517578525092137607[21] = 0;
   out_3517578525092137607[22] = 0;
   out_3517578525092137607[23] = 0;
   out_3517578525092137607[24] = 0;
   out_3517578525092137607[25] = 0;
   out_3517578525092137607[26] = 0;
   out_3517578525092137607[27] = 0;
   out_3517578525092137607[28] = 0;
   out_3517578525092137607[29] = 0;
   out_3517578525092137607[30] = 0;
   out_3517578525092137607[31] = 0;
   out_3517578525092137607[32] = 0;
   out_3517578525092137607[33] = 1;
   out_3517578525092137607[34] = 0;
   out_3517578525092137607[35] = 0;
   out_3517578525092137607[36] = 1;
   out_3517578525092137607[37] = 0;
   out_3517578525092137607[38] = 0;
   out_3517578525092137607[39] = 0;
   out_3517578525092137607[40] = 0;
   out_3517578525092137607[41] = 0;
   out_3517578525092137607[42] = 0;
   out_3517578525092137607[43] = 0;
   out_3517578525092137607[44] = 0;
   out_3517578525092137607[45] = 0;
   out_3517578525092137607[46] = 0;
   out_3517578525092137607[47] = 0;
   out_3517578525092137607[48] = 0;
   out_3517578525092137607[49] = 0;
   out_3517578525092137607[50] = 0;
   out_3517578525092137607[51] = 0;
   out_3517578525092137607[52] = 0;
   out_3517578525092137607[53] = 0;
   out_3517578525092137607[54] = 0;
   out_3517578525092137607[55] = 0;
   out_3517578525092137607[56] = 1;
   out_3517578525092137607[57] = 0;
   out_3517578525092137607[58] = 0;
   out_3517578525092137607[59] = 1;
   out_3517578525092137607[60] = 0;
   out_3517578525092137607[61] = 0;
   out_3517578525092137607[62] = 0;
   out_3517578525092137607[63] = 0;
   out_3517578525092137607[64] = 0;
   out_3517578525092137607[65] = 0;
}
void h_9(double *state, double *unused, double *out_6893489785320500403) {
   out_6893489785320500403[0] = state[10];
   out_6893489785320500403[1] = state[11];
   out_6893489785320500403[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3276388878462546962) {
   out_3276388878462546962[0] = 0;
   out_3276388878462546962[1] = 0;
   out_3276388878462546962[2] = 0;
   out_3276388878462546962[3] = 0;
   out_3276388878462546962[4] = 0;
   out_3276388878462546962[5] = 0;
   out_3276388878462546962[6] = 0;
   out_3276388878462546962[7] = 0;
   out_3276388878462546962[8] = 0;
   out_3276388878462546962[9] = 0;
   out_3276388878462546962[10] = 1;
   out_3276388878462546962[11] = 0;
   out_3276388878462546962[12] = 0;
   out_3276388878462546962[13] = 0;
   out_3276388878462546962[14] = 0;
   out_3276388878462546962[15] = 0;
   out_3276388878462546962[16] = 0;
   out_3276388878462546962[17] = 0;
   out_3276388878462546962[18] = 0;
   out_3276388878462546962[19] = 0;
   out_3276388878462546962[20] = 0;
   out_3276388878462546962[21] = 0;
   out_3276388878462546962[22] = 0;
   out_3276388878462546962[23] = 0;
   out_3276388878462546962[24] = 0;
   out_3276388878462546962[25] = 0;
   out_3276388878462546962[26] = 0;
   out_3276388878462546962[27] = 0;
   out_3276388878462546962[28] = 0;
   out_3276388878462546962[29] = 0;
   out_3276388878462546962[30] = 0;
   out_3276388878462546962[31] = 0;
   out_3276388878462546962[32] = 0;
   out_3276388878462546962[33] = 1;
   out_3276388878462546962[34] = 0;
   out_3276388878462546962[35] = 0;
   out_3276388878462546962[36] = 0;
   out_3276388878462546962[37] = 0;
   out_3276388878462546962[38] = 0;
   out_3276388878462546962[39] = 0;
   out_3276388878462546962[40] = 0;
   out_3276388878462546962[41] = 0;
   out_3276388878462546962[42] = 0;
   out_3276388878462546962[43] = 0;
   out_3276388878462546962[44] = 0;
   out_3276388878462546962[45] = 0;
   out_3276388878462546962[46] = 0;
   out_3276388878462546962[47] = 0;
   out_3276388878462546962[48] = 0;
   out_3276388878462546962[49] = 0;
   out_3276388878462546962[50] = 0;
   out_3276388878462546962[51] = 0;
   out_3276388878462546962[52] = 0;
   out_3276388878462546962[53] = 0;
   out_3276388878462546962[54] = 0;
   out_3276388878462546962[55] = 0;
   out_3276388878462546962[56] = 1;
   out_3276388878462546962[57] = 0;
   out_3276388878462546962[58] = 0;
   out_3276388878462546962[59] = 0;
   out_3276388878462546962[60] = 0;
   out_3276388878462546962[61] = 0;
   out_3276388878462546962[62] = 0;
   out_3276388878462546962[63] = 0;
   out_3276388878462546962[64] = 0;
   out_3276388878462546962[65] = 0;
}
void h_10(double *state, double *unused, double *out_82810951910786289) {
   out_82810951910786289[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_82810951910786289[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_82810951910786289[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4604990361898259311) {
   out_4604990361898259311[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4604990361898259311[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4604990361898259311[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4604990361898259311[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4604990361898259311[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4604990361898259311[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4604990361898259311[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4604990361898259311[7] = 0;
   out_4604990361898259311[8] = 0;
   out_4604990361898259311[9] = 0;
   out_4604990361898259311[10] = 0;
   out_4604990361898259311[11] = 0;
   out_4604990361898259311[12] = 0;
   out_4604990361898259311[13] = 0;
   out_4604990361898259311[14] = 0;
   out_4604990361898259311[15] = 0;
   out_4604990361898259311[16] = 1;
   out_4604990361898259311[17] = 0;
   out_4604990361898259311[18] = 0;
   out_4604990361898259311[19] = 1;
   out_4604990361898259311[20] = 0;
   out_4604990361898259311[21] = 0;
   out_4604990361898259311[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4604990361898259311[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4604990361898259311[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4604990361898259311[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4604990361898259311[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4604990361898259311[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4604990361898259311[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4604990361898259311[29] = 0;
   out_4604990361898259311[30] = 0;
   out_4604990361898259311[31] = 0;
   out_4604990361898259311[32] = 0;
   out_4604990361898259311[33] = 0;
   out_4604990361898259311[34] = 0;
   out_4604990361898259311[35] = 0;
   out_4604990361898259311[36] = 0;
   out_4604990361898259311[37] = 0;
   out_4604990361898259311[38] = 0;
   out_4604990361898259311[39] = 1;
   out_4604990361898259311[40] = 0;
   out_4604990361898259311[41] = 0;
   out_4604990361898259311[42] = 1;
   out_4604990361898259311[43] = 0;
   out_4604990361898259311[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4604990361898259311[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4604990361898259311[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4604990361898259311[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4604990361898259311[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4604990361898259311[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4604990361898259311[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4604990361898259311[51] = 0;
   out_4604990361898259311[52] = 0;
   out_4604990361898259311[53] = 0;
   out_4604990361898259311[54] = 0;
   out_4604990361898259311[55] = 0;
   out_4604990361898259311[56] = 0;
   out_4604990361898259311[57] = 0;
   out_4604990361898259311[58] = 0;
   out_4604990361898259311[59] = 0;
   out_4604990361898259311[60] = 0;
   out_4604990361898259311[61] = 0;
   out_4604990361898259311[62] = 1;
   out_4604990361898259311[63] = 0;
   out_4604990361898259311[64] = 0;
   out_4604990361898259311[65] = 1;
}
void h_12(double *state, double *unused, double *out_776837085057038320) {
   out_776837085057038320[0] = state[0];
   out_776837085057038320[1] = state[1];
   out_776837085057038320[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1501877882939824188) {
   out_1501877882939824188[0] = 1;
   out_1501877882939824188[1] = 0;
   out_1501877882939824188[2] = 0;
   out_1501877882939824188[3] = 0;
   out_1501877882939824188[4] = 0;
   out_1501877882939824188[5] = 0;
   out_1501877882939824188[6] = 0;
   out_1501877882939824188[7] = 0;
   out_1501877882939824188[8] = 0;
   out_1501877882939824188[9] = 0;
   out_1501877882939824188[10] = 0;
   out_1501877882939824188[11] = 0;
   out_1501877882939824188[12] = 0;
   out_1501877882939824188[13] = 0;
   out_1501877882939824188[14] = 0;
   out_1501877882939824188[15] = 0;
   out_1501877882939824188[16] = 0;
   out_1501877882939824188[17] = 0;
   out_1501877882939824188[18] = 0;
   out_1501877882939824188[19] = 0;
   out_1501877882939824188[20] = 0;
   out_1501877882939824188[21] = 0;
   out_1501877882939824188[22] = 0;
   out_1501877882939824188[23] = 1;
   out_1501877882939824188[24] = 0;
   out_1501877882939824188[25] = 0;
   out_1501877882939824188[26] = 0;
   out_1501877882939824188[27] = 0;
   out_1501877882939824188[28] = 0;
   out_1501877882939824188[29] = 0;
   out_1501877882939824188[30] = 0;
   out_1501877882939824188[31] = 0;
   out_1501877882939824188[32] = 0;
   out_1501877882939824188[33] = 0;
   out_1501877882939824188[34] = 0;
   out_1501877882939824188[35] = 0;
   out_1501877882939824188[36] = 0;
   out_1501877882939824188[37] = 0;
   out_1501877882939824188[38] = 0;
   out_1501877882939824188[39] = 0;
   out_1501877882939824188[40] = 0;
   out_1501877882939824188[41] = 0;
   out_1501877882939824188[42] = 0;
   out_1501877882939824188[43] = 0;
   out_1501877882939824188[44] = 0;
   out_1501877882939824188[45] = 0;
   out_1501877882939824188[46] = 1;
   out_1501877882939824188[47] = 0;
   out_1501877882939824188[48] = 0;
   out_1501877882939824188[49] = 0;
   out_1501877882939824188[50] = 0;
   out_1501877882939824188[51] = 0;
   out_1501877882939824188[52] = 0;
   out_1501877882939824188[53] = 0;
   out_1501877882939824188[54] = 0;
   out_1501877882939824188[55] = 0;
   out_1501877882939824188[56] = 0;
   out_1501877882939824188[57] = 0;
   out_1501877882939824188[58] = 0;
   out_1501877882939824188[59] = 0;
   out_1501877882939824188[60] = 0;
   out_1501877882939824188[61] = 0;
   out_1501877882939824188[62] = 0;
   out_1501877882939824188[63] = 0;
   out_1501877882939824188[64] = 0;
   out_1501877882939824188[65] = 0;
}
void h_35(double *state, double *unused, double *out_8223839114697912285) {
   out_8223839114697912285[0] = state[7];
   out_8223839114697912285[1] = state[8];
   out_8223839114697912285[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4247440915264837897) {
   out_4247440915264837897[0] = 0;
   out_4247440915264837897[1] = 0;
   out_4247440915264837897[2] = 0;
   out_4247440915264837897[3] = 0;
   out_4247440915264837897[4] = 0;
   out_4247440915264837897[5] = 0;
   out_4247440915264837897[6] = 0;
   out_4247440915264837897[7] = 1;
   out_4247440915264837897[8] = 0;
   out_4247440915264837897[9] = 0;
   out_4247440915264837897[10] = 0;
   out_4247440915264837897[11] = 0;
   out_4247440915264837897[12] = 0;
   out_4247440915264837897[13] = 0;
   out_4247440915264837897[14] = 0;
   out_4247440915264837897[15] = 0;
   out_4247440915264837897[16] = 0;
   out_4247440915264837897[17] = 0;
   out_4247440915264837897[18] = 0;
   out_4247440915264837897[19] = 0;
   out_4247440915264837897[20] = 0;
   out_4247440915264837897[21] = 0;
   out_4247440915264837897[22] = 0;
   out_4247440915264837897[23] = 0;
   out_4247440915264837897[24] = 0;
   out_4247440915264837897[25] = 0;
   out_4247440915264837897[26] = 0;
   out_4247440915264837897[27] = 0;
   out_4247440915264837897[28] = 0;
   out_4247440915264837897[29] = 0;
   out_4247440915264837897[30] = 1;
   out_4247440915264837897[31] = 0;
   out_4247440915264837897[32] = 0;
   out_4247440915264837897[33] = 0;
   out_4247440915264837897[34] = 0;
   out_4247440915264837897[35] = 0;
   out_4247440915264837897[36] = 0;
   out_4247440915264837897[37] = 0;
   out_4247440915264837897[38] = 0;
   out_4247440915264837897[39] = 0;
   out_4247440915264837897[40] = 0;
   out_4247440915264837897[41] = 0;
   out_4247440915264837897[42] = 0;
   out_4247440915264837897[43] = 0;
   out_4247440915264837897[44] = 0;
   out_4247440915264837897[45] = 0;
   out_4247440915264837897[46] = 0;
   out_4247440915264837897[47] = 0;
   out_4247440915264837897[48] = 0;
   out_4247440915264837897[49] = 0;
   out_4247440915264837897[50] = 0;
   out_4247440915264837897[51] = 0;
   out_4247440915264837897[52] = 0;
   out_4247440915264837897[53] = 1;
   out_4247440915264837897[54] = 0;
   out_4247440915264837897[55] = 0;
   out_4247440915264837897[56] = 0;
   out_4247440915264837897[57] = 0;
   out_4247440915264837897[58] = 0;
   out_4247440915264837897[59] = 0;
   out_4247440915264837897[60] = 0;
   out_4247440915264837897[61] = 0;
   out_4247440915264837897[62] = 0;
   out_4247440915264837897[63] = 0;
   out_4247440915264837897[64] = 0;
   out_4247440915264837897[65] = 0;
}
void h_32(double *state, double *unused, double *out_4064109680854470257) {
   out_4064109680854470257[0] = state[3];
   out_4064109680854470257[1] = state[4];
   out_4064109680854470257[2] = state[5];
   out_4064109680854470257[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6952465428166587834) {
   out_6952465428166587834[0] = 0;
   out_6952465428166587834[1] = 0;
   out_6952465428166587834[2] = 0;
   out_6952465428166587834[3] = 1;
   out_6952465428166587834[4] = 0;
   out_6952465428166587834[5] = 0;
   out_6952465428166587834[6] = 0;
   out_6952465428166587834[7] = 0;
   out_6952465428166587834[8] = 0;
   out_6952465428166587834[9] = 0;
   out_6952465428166587834[10] = 0;
   out_6952465428166587834[11] = 0;
   out_6952465428166587834[12] = 0;
   out_6952465428166587834[13] = 0;
   out_6952465428166587834[14] = 0;
   out_6952465428166587834[15] = 0;
   out_6952465428166587834[16] = 0;
   out_6952465428166587834[17] = 0;
   out_6952465428166587834[18] = 0;
   out_6952465428166587834[19] = 0;
   out_6952465428166587834[20] = 0;
   out_6952465428166587834[21] = 0;
   out_6952465428166587834[22] = 0;
   out_6952465428166587834[23] = 0;
   out_6952465428166587834[24] = 0;
   out_6952465428166587834[25] = 0;
   out_6952465428166587834[26] = 1;
   out_6952465428166587834[27] = 0;
   out_6952465428166587834[28] = 0;
   out_6952465428166587834[29] = 0;
   out_6952465428166587834[30] = 0;
   out_6952465428166587834[31] = 0;
   out_6952465428166587834[32] = 0;
   out_6952465428166587834[33] = 0;
   out_6952465428166587834[34] = 0;
   out_6952465428166587834[35] = 0;
   out_6952465428166587834[36] = 0;
   out_6952465428166587834[37] = 0;
   out_6952465428166587834[38] = 0;
   out_6952465428166587834[39] = 0;
   out_6952465428166587834[40] = 0;
   out_6952465428166587834[41] = 0;
   out_6952465428166587834[42] = 0;
   out_6952465428166587834[43] = 0;
   out_6952465428166587834[44] = 0;
   out_6952465428166587834[45] = 0;
   out_6952465428166587834[46] = 0;
   out_6952465428166587834[47] = 0;
   out_6952465428166587834[48] = 0;
   out_6952465428166587834[49] = 1;
   out_6952465428166587834[50] = 0;
   out_6952465428166587834[51] = 0;
   out_6952465428166587834[52] = 0;
   out_6952465428166587834[53] = 0;
   out_6952465428166587834[54] = 0;
   out_6952465428166587834[55] = 0;
   out_6952465428166587834[56] = 0;
   out_6952465428166587834[57] = 0;
   out_6952465428166587834[58] = 0;
   out_6952465428166587834[59] = 0;
   out_6952465428166587834[60] = 0;
   out_6952465428166587834[61] = 0;
   out_6952465428166587834[62] = 0;
   out_6952465428166587834[63] = 0;
   out_6952465428166587834[64] = 0;
   out_6952465428166587834[65] = 0;
   out_6952465428166587834[66] = 0;
   out_6952465428166587834[67] = 0;
   out_6952465428166587834[68] = 0;
   out_6952465428166587834[69] = 0;
   out_6952465428166587834[70] = 0;
   out_6952465428166587834[71] = 0;
   out_6952465428166587834[72] = 1;
   out_6952465428166587834[73] = 0;
   out_6952465428166587834[74] = 0;
   out_6952465428166587834[75] = 0;
   out_6952465428166587834[76] = 0;
   out_6952465428166587834[77] = 0;
   out_6952465428166587834[78] = 0;
   out_6952465428166587834[79] = 0;
   out_6952465428166587834[80] = 0;
   out_6952465428166587834[81] = 0;
   out_6952465428166587834[82] = 0;
   out_6952465428166587834[83] = 0;
   out_6952465428166587834[84] = 0;
   out_6952465428166587834[85] = 0;
   out_6952465428166587834[86] = 0;
   out_6952465428166587834[87] = 0;
}
void h_13(double *state, double *unused, double *out_4147497768551680331) {
   out_4147497768551680331[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4147497768551680331[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4147497768551680331[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2648022187579419200) {
   out_2648022187579419200[0] = 0;
   out_2648022187579419200[1] = 0;
   out_2648022187579419200[2] = 0;
   out_2648022187579419200[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2648022187579419200[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2648022187579419200[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2648022187579419200[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2648022187579419200[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2648022187579419200[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2648022187579419200[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2648022187579419200[10] = 0;
   out_2648022187579419200[11] = 0;
   out_2648022187579419200[12] = 0;
   out_2648022187579419200[13] = 0;
   out_2648022187579419200[14] = 0;
   out_2648022187579419200[15] = 0;
   out_2648022187579419200[16] = 0;
   out_2648022187579419200[17] = 0;
   out_2648022187579419200[18] = 0;
   out_2648022187579419200[19] = 0;
   out_2648022187579419200[20] = 0;
   out_2648022187579419200[21] = 0;
   out_2648022187579419200[22] = 0;
   out_2648022187579419200[23] = 0;
   out_2648022187579419200[24] = 0;
   out_2648022187579419200[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2648022187579419200[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2648022187579419200[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2648022187579419200[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2648022187579419200[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2648022187579419200[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2648022187579419200[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2648022187579419200[32] = 0;
   out_2648022187579419200[33] = 0;
   out_2648022187579419200[34] = 0;
   out_2648022187579419200[35] = 0;
   out_2648022187579419200[36] = 0;
   out_2648022187579419200[37] = 0;
   out_2648022187579419200[38] = 0;
   out_2648022187579419200[39] = 0;
   out_2648022187579419200[40] = 0;
   out_2648022187579419200[41] = 0;
   out_2648022187579419200[42] = 0;
   out_2648022187579419200[43] = 0;
   out_2648022187579419200[44] = 0;
   out_2648022187579419200[45] = 0;
   out_2648022187579419200[46] = 0;
   out_2648022187579419200[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2648022187579419200[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2648022187579419200[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2648022187579419200[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2648022187579419200[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2648022187579419200[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2648022187579419200[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2648022187579419200[54] = 0;
   out_2648022187579419200[55] = 0;
   out_2648022187579419200[56] = 0;
   out_2648022187579419200[57] = 0;
   out_2648022187579419200[58] = 0;
   out_2648022187579419200[59] = 0;
   out_2648022187579419200[60] = 0;
   out_2648022187579419200[61] = 0;
   out_2648022187579419200[62] = 0;
   out_2648022187579419200[63] = 0;
   out_2648022187579419200[64] = 0;
   out_2648022187579419200[65] = 0;
}
void h_14(double *state, double *unused, double *out_6893489785320500403) {
   out_6893489785320500403[0] = state[10];
   out_6893489785320500403[1] = state[11];
   out_6893489785320500403[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3276388878462546962) {
   out_3276388878462546962[0] = 0;
   out_3276388878462546962[1] = 0;
   out_3276388878462546962[2] = 0;
   out_3276388878462546962[3] = 0;
   out_3276388878462546962[4] = 0;
   out_3276388878462546962[5] = 0;
   out_3276388878462546962[6] = 0;
   out_3276388878462546962[7] = 0;
   out_3276388878462546962[8] = 0;
   out_3276388878462546962[9] = 0;
   out_3276388878462546962[10] = 1;
   out_3276388878462546962[11] = 0;
   out_3276388878462546962[12] = 0;
   out_3276388878462546962[13] = 0;
   out_3276388878462546962[14] = 0;
   out_3276388878462546962[15] = 0;
   out_3276388878462546962[16] = 0;
   out_3276388878462546962[17] = 0;
   out_3276388878462546962[18] = 0;
   out_3276388878462546962[19] = 0;
   out_3276388878462546962[20] = 0;
   out_3276388878462546962[21] = 0;
   out_3276388878462546962[22] = 0;
   out_3276388878462546962[23] = 0;
   out_3276388878462546962[24] = 0;
   out_3276388878462546962[25] = 0;
   out_3276388878462546962[26] = 0;
   out_3276388878462546962[27] = 0;
   out_3276388878462546962[28] = 0;
   out_3276388878462546962[29] = 0;
   out_3276388878462546962[30] = 0;
   out_3276388878462546962[31] = 0;
   out_3276388878462546962[32] = 0;
   out_3276388878462546962[33] = 1;
   out_3276388878462546962[34] = 0;
   out_3276388878462546962[35] = 0;
   out_3276388878462546962[36] = 0;
   out_3276388878462546962[37] = 0;
   out_3276388878462546962[38] = 0;
   out_3276388878462546962[39] = 0;
   out_3276388878462546962[40] = 0;
   out_3276388878462546962[41] = 0;
   out_3276388878462546962[42] = 0;
   out_3276388878462546962[43] = 0;
   out_3276388878462546962[44] = 0;
   out_3276388878462546962[45] = 0;
   out_3276388878462546962[46] = 0;
   out_3276388878462546962[47] = 0;
   out_3276388878462546962[48] = 0;
   out_3276388878462546962[49] = 0;
   out_3276388878462546962[50] = 0;
   out_3276388878462546962[51] = 0;
   out_3276388878462546962[52] = 0;
   out_3276388878462546962[53] = 0;
   out_3276388878462546962[54] = 0;
   out_3276388878462546962[55] = 0;
   out_3276388878462546962[56] = 1;
   out_3276388878462546962[57] = 0;
   out_3276388878462546962[58] = 0;
   out_3276388878462546962[59] = 0;
   out_3276388878462546962[60] = 0;
   out_3276388878462546962[61] = 0;
   out_3276388878462546962[62] = 0;
   out_3276388878462546962[63] = 0;
   out_3276388878462546962[64] = 0;
   out_3276388878462546962[65] = 0;
}
void h_33(double *state, double *unused, double *out_1906658624840985846) {
   out_1906658624840985846[0] = state[16];
   out_1906658624840985846[1] = state[17];
   out_1906658624840985846[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7397997919903695501) {
   out_7397997919903695501[0] = 0;
   out_7397997919903695501[1] = 0;
   out_7397997919903695501[2] = 0;
   out_7397997919903695501[3] = 0;
   out_7397997919903695501[4] = 0;
   out_7397997919903695501[5] = 0;
   out_7397997919903695501[6] = 0;
   out_7397997919903695501[7] = 0;
   out_7397997919903695501[8] = 0;
   out_7397997919903695501[9] = 0;
   out_7397997919903695501[10] = 0;
   out_7397997919903695501[11] = 0;
   out_7397997919903695501[12] = 0;
   out_7397997919903695501[13] = 0;
   out_7397997919903695501[14] = 0;
   out_7397997919903695501[15] = 0;
   out_7397997919903695501[16] = 1;
   out_7397997919903695501[17] = 0;
   out_7397997919903695501[18] = 0;
   out_7397997919903695501[19] = 0;
   out_7397997919903695501[20] = 0;
   out_7397997919903695501[21] = 0;
   out_7397997919903695501[22] = 0;
   out_7397997919903695501[23] = 0;
   out_7397997919903695501[24] = 0;
   out_7397997919903695501[25] = 0;
   out_7397997919903695501[26] = 0;
   out_7397997919903695501[27] = 0;
   out_7397997919903695501[28] = 0;
   out_7397997919903695501[29] = 0;
   out_7397997919903695501[30] = 0;
   out_7397997919903695501[31] = 0;
   out_7397997919903695501[32] = 0;
   out_7397997919903695501[33] = 0;
   out_7397997919903695501[34] = 0;
   out_7397997919903695501[35] = 0;
   out_7397997919903695501[36] = 0;
   out_7397997919903695501[37] = 0;
   out_7397997919903695501[38] = 0;
   out_7397997919903695501[39] = 1;
   out_7397997919903695501[40] = 0;
   out_7397997919903695501[41] = 0;
   out_7397997919903695501[42] = 0;
   out_7397997919903695501[43] = 0;
   out_7397997919903695501[44] = 0;
   out_7397997919903695501[45] = 0;
   out_7397997919903695501[46] = 0;
   out_7397997919903695501[47] = 0;
   out_7397997919903695501[48] = 0;
   out_7397997919903695501[49] = 0;
   out_7397997919903695501[50] = 0;
   out_7397997919903695501[51] = 0;
   out_7397997919903695501[52] = 0;
   out_7397997919903695501[53] = 0;
   out_7397997919903695501[54] = 0;
   out_7397997919903695501[55] = 0;
   out_7397997919903695501[56] = 0;
   out_7397997919903695501[57] = 0;
   out_7397997919903695501[58] = 0;
   out_7397997919903695501[59] = 0;
   out_7397997919903695501[60] = 0;
   out_7397997919903695501[61] = 0;
   out_7397997919903695501[62] = 1;
   out_7397997919903695501[63] = 0;
   out_7397997919903695501[64] = 0;
   out_7397997919903695501[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_238063668449877974) {
  H(in_vec, out_238063668449877974);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5827253177424224507) {
  err_fun(nom_x, delta_x, out_5827253177424224507);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4468494934585064234) {
  inv_err_fun(nom_x, true_x, out_4468494934585064234);
}
void live_H_mod_fun(double *state, double *out_69948331551315511) {
  H_mod_fun(state, out_69948331551315511);
}
void live_f_fun(double *state, double dt, double *out_3835765045679366635) {
  f_fun(state,  dt, out_3835765045679366635);
}
void live_F_fun(double *state, double dt, double *out_5863509772455118343) {
  F_fun(state,  dt, out_5863509772455118343);
}
void live_h_4(double *state, double *unused, double *out_8620507365813022760) {
  h_4(state, unused, out_8620507365813022760);
}
void live_H_4(double *state, double *unused, double *out_3517578525092137607) {
  H_4(state, unused, out_3517578525092137607);
}
void live_h_9(double *state, double *unused, double *out_6893489785320500403) {
  h_9(state, unused, out_6893489785320500403);
}
void live_H_9(double *state, double *unused, double *out_3276388878462546962) {
  H_9(state, unused, out_3276388878462546962);
}
void live_h_10(double *state, double *unused, double *out_82810951910786289) {
  h_10(state, unused, out_82810951910786289);
}
void live_H_10(double *state, double *unused, double *out_4604990361898259311) {
  H_10(state, unused, out_4604990361898259311);
}
void live_h_12(double *state, double *unused, double *out_776837085057038320) {
  h_12(state, unused, out_776837085057038320);
}
void live_H_12(double *state, double *unused, double *out_1501877882939824188) {
  H_12(state, unused, out_1501877882939824188);
}
void live_h_35(double *state, double *unused, double *out_8223839114697912285) {
  h_35(state, unused, out_8223839114697912285);
}
void live_H_35(double *state, double *unused, double *out_4247440915264837897) {
  H_35(state, unused, out_4247440915264837897);
}
void live_h_32(double *state, double *unused, double *out_4064109680854470257) {
  h_32(state, unused, out_4064109680854470257);
}
void live_H_32(double *state, double *unused, double *out_6952465428166587834) {
  H_32(state, unused, out_6952465428166587834);
}
void live_h_13(double *state, double *unused, double *out_4147497768551680331) {
  h_13(state, unused, out_4147497768551680331);
}
void live_H_13(double *state, double *unused, double *out_2648022187579419200) {
  H_13(state, unused, out_2648022187579419200);
}
void live_h_14(double *state, double *unused, double *out_6893489785320500403) {
  h_14(state, unused, out_6893489785320500403);
}
void live_H_14(double *state, double *unused, double *out_3276388878462546962) {
  H_14(state, unused, out_3276388878462546962);
}
void live_h_33(double *state, double *unused, double *out_1906658624840985846) {
  h_33(state, unused, out_1906658624840985846);
}
void live_H_33(double *state, double *unused, double *out_7397997919903695501) {
  H_33(state, unused, out_7397997919903695501);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
